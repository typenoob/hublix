{"version":3,"file":"js/396.7f607644.js","mappings":"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","sources":["webpack://hublix/./src/pages/SearchPage.vue","webpack://hublix/../../src/composables/filter.ts","webpack://hublix/../../../src/components/VAutocomplete/VAutocomplete.tsx","webpack://hublix/./src/components/SearchWidget.vue","webpack://hublix/./src/components/SearchWidget.vue?d4a2","webpack://hublix/./src/pages/SearchPage.vue?4cb4"],"sourcesContent":["<template>\r\n  <v-container\r\n    ><SearchWidget @idSearched=\"getId\" />\r\n    <v-card class=\"pt-4 px-2 mb-10\" flat>\r\n      <v-row class=\"\"\r\n        ><v-col>搜索历史</v-col\r\n        ><v-col class=\"d-flex justify-end\" @click=\"clearHistory()\" style=\"\"\r\n          >清空</v-col\r\n        ></v-row\r\n      >\r\n      <v-chip\r\n        class=\"ma-2\"\r\n        v-for=\"(item, index) in history\"\r\n        :key=\"index\"\r\n        @click=\"id = item.id\"\r\n        x-small\r\n      >\r\n        {{ item.name }}\r\n      </v-chip>\r\n    </v-card>\r\n    <MovieCard :id=\"id\" />\r\n  </v-container>\r\n</template>\r\n<script>\r\nimport SearchWidget from \"@/components/SearchWidget.vue\";\r\nimport MovieCard from \"@/components/MovieCard.vue\";\r\nimport Movie from \"@/api/movie\";\r\nexport default {\r\n  components: { SearchWidget, MovieCard },\r\n  created() {\r\n    this.fetchData();\r\n  },\r\n  data() {\r\n    return {\r\n      id: 343611,\r\n      history: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async getId(val) {\r\n      this.id = val;\r\n      await Movie.history.onSearched(val);\r\n      this.fetchData();\r\n    },\r\n    fetchData() {\r\n      Movie.history.readSearched().then((res) => (this.history = res));\r\n    },\r\n    async clearHistory() {\r\n      await Movie.history.clear();\r\n      this.fetchData();\r\n    },\r\n  },\r\n};\r\n</script>\r\n","/* eslint-disable max-statements */\n/* eslint-disable no-labels */\n\n// Utilities\nimport { getPropertyFromItem, propsFactory, wrapInArray } from '@/util'\nimport { computed, unref } from 'vue'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { MaybeRef } from '@/util'\n\nexport type FilterFunction = (value: string, query: string, item?: any) => FilterMatch\nexport type FilterKeyFunctions = Record<string, FilterFunction>\nexport type FilterKeys = string | string[]\nexport type FilterMatch = number | [number, number] | [number, number][] | boolean\nexport type FilterMode = 'some' | 'every' | 'union' | 'intersection'\n\nexport interface FilterProps {\n  customFilter?: FilterFunction\n  customKeyFilter?: FilterKeyFunctions\n  filterKeys?: FilterKeys\n  filterMode?: FilterMode\n  noFilter?: boolean\n}\n\n// Composables\nexport const defaultFilter: FilterFunction = (value, query, item) => {\n  if (value == null || query == null) return -1\n\n  return value.toString().toLocaleLowerCase().indexOf(query.toString().toLocaleLowerCase())\n}\n\nexport const makeFilterProps = propsFactory({\n  customFilter: Function as PropType<FilterFunction>,\n  customKeyFilter: Object as PropType<FilterKeyFunctions>,\n  filterKeys: [Array, String] as PropType<FilterKeys>,\n  filterMode: {\n    type: String as PropType<FilterMode>,\n    default: 'intersection',\n  },\n  noFilter: Boolean,\n}, 'filter')\n\nexport function filterItems<T = Record<string, any>> (\n  items: T[],\n  query: string,\n  options?: {\n    customKeyFilter?: FilterKeyFunctions\n    default?: FilterFunction\n    filterKeys?: FilterKeys\n    filterMode?: FilterMode\n    noFilter?: boolean\n  },\n) {\n  const array: { item: T, matches: Record<string, FilterMatch> }[] = []\n  // always ensure we fall back to a functioning filter\n  const filter = options?.default ?? defaultFilter\n  const keys = options?.filterKeys ? wrapInArray(options.filterKeys) : false\n  const customFiltersLength = Object.keys(options?.customKeyFilter ?? {}).length\n\n  if (!items?.length) return array\n\n  loop:\n  for (const item of items) {\n    const customMatches: Record<string, FilterMatch> = {}\n    const defaultMatches: Record<string, FilterMatch> = {}\n    let match: FilterMatch = -1\n\n    if (query && typeof item === 'object' && !options?.noFilter) {\n      const filterKeys = keys || Object.keys(item)\n\n      for (const key of filterKeys) {\n        const value = getPropertyFromItem(item as any, key, item)\n        const keyFilter = options?.customKeyFilter?.[key]\n\n        match = keyFilter\n          ? keyFilter(value, query, item)\n          : filter(value, query, item)\n\n        if (match !== -1 && match !== false) {\n          if (keyFilter) customMatches[key] = match\n          else defaultMatches[key] = match\n        } else if (options?.filterMode === 'every') {\n          continue loop\n        }\n      }\n\n      const defaultMatchesLength = Object.keys(defaultMatches).length\n      const customMatchesLength = Object.keys(customMatches).length\n\n      if (!defaultMatchesLength && !customMatchesLength) continue\n\n      if (\n        options?.filterMode === 'union' &&\n        customMatchesLength !== customFiltersLength &&\n        !defaultMatchesLength\n      ) continue\n\n      if (\n        options?.filterMode === 'intersection' &&\n        (\n          customMatchesLength !== customFiltersLength ||\n          !defaultMatchesLength\n        )\n      ) continue\n    }\n\n    array.push({ item, matches: { ...defaultMatches, ...customMatches } })\n  }\n\n  return array\n}\n\nexport function useFilter<T> (\n  props: FilterProps,\n  items: MaybeRef<T[]>,\n  query?: Ref<string | undefined>,\n) {\n  const strQuery = computed(() => (\n    typeof query?.value !== 'string' &&\n    typeof query?.value !== 'number'\n  ) ? '' : String(query.value))\n\n  const filteredItems = computed(() => {\n    return filterItems(\n      unref(items),\n      strQuery.value,\n      {\n        customKeyFilter: props.customKeyFilter,\n        default: props.customFilter,\n        filterKeys: props.filterKeys,\n        filterMode: props.filterMode,\n        noFilter: props.noFilter,\n      },\n    )\n  })\n\n  return { filteredItems }\n}\n","// Styles\nimport './VAutocomplete.sass'\n\n// Components\nimport { makeSelectProps } from '@/components/VSelect/VSelect'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { VTextField } from '@/components/VTextField'\n\n// Composables\nimport { makeFilterProps, useFilter } from '@/composables/filter'\nimport { makeTransitionProps } from '@/composables/transition'\nimport { transformItem, useItems } from '@/composables/items'\nimport { useForwardRef } from '@/composables/forwardRef'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utility\nimport { computed, nextTick, ref, watch } from 'vue'\nimport { genericComponent, useRender, wrapInArray } from '@/util'\n\n// Types\nimport type { FilterMatch } from '@/composables/filter'\nimport type { DefaultChipSlot, InternalSelectItem } from '@/components/VSelect/VSelect'\nimport type { MakeSlots } from '@/util'\n\nexport interface InternalAutocompleteItem extends InternalSelectItem {\n\n}\n\nexport interface DefaultAutocompleteSlot {\n  selection: InternalAutocompleteItem\n}\n\nfunction highlightResult (text: string, matches: FilterMatch, length: number) {\n  if (Array.isArray(matches)) throw new Error('Multiple matches is not implemented')\n\n  return typeof matches === 'number' && ~matches\n    ? (\n      <>\n        <span class=\"v-autocomplete__unmask\">{ text.substr(0, matches) }</span>\n        <span class=\"v-autocomplete__mask\">{ text.substr(matches, length) }</span>\n        <span class=\"v-autocomplete__unmask\">{ text.substr(matches + length) }</span>\n      </>\n    )\n    : text\n}\n\nexport const VAutocomplete = genericComponent<new <T>() => {\n  $slots: MakeSlots<{\n    chip: [DefaultChipSlot]\n    default: []\n    selection: [DefaultAutocompleteSlot]\n  }>\n}>()({\n  name: 'VAutocomplete',\n\n  props: {\n    // TODO: implement post keyboard support\n    // autoSelectFirst: Boolean,\n    search: String,\n\n    ...makeFilterProps({ filterKeys: ['title'] }),\n    ...makeSelectProps(),\n    ...makeTransitionProps({ transition: false }),\n  },\n\n  emits: {\n    'click:clear': (e: MouseEvent) => true,\n    'update:search': (val: any) => true,\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const activator = ref()\n    const isFocused = ref(false)\n    const isPristine = ref(true)\n    const menu = ref(false)\n    const { items } = useItems(props)\n    const search = useProxiedModel(props, 'search', '')\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => wrapInArray(v || []),\n      (v: any) => props.multiple ? v : v[0]\n    )\n    const { filteredItems } = useFilter(props, items, computed(() => isPristine.value ? undefined : search.value))\n    const selections = computed(() => {\n      const array: InternalSelectItem[] = []\n      let index = 0\n      for (const unwrapped of model.value) {\n        const item = transformItem(props, unwrapped)\n\n        const found = array.find(selection => selection.value === item.value)\n\n        if (found == null) {\n          array.push({\n            ...item,\n            index,\n          })\n\n          index++\n        }\n      }\n\n      return array\n    })\n    const selected = computed(() => selections.value.map(selection => selection.value))\n\n    function onClear (e: MouseEvent) {\n      model.value = []\n\n      if (props.openOnClear) {\n        menu.value = true\n      }\n\n      search.value = ''\n    }\n    function onClickControl () {\n      if (props.hideNoData && !filteredItems.value.length) return\n\n      menu.value = true\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (['Enter', 'Escape', 'Tab'].includes(e.key)) {\n        isPristine.value = true\n      }\n    }\n    function onInput (e: InputEvent) {\n      search.value = (e.target as HTMLInputElement).value\n    }\n    function onAfterLeave () {\n      if (isFocused.value) isPristine.value = true\n    }\n    const isSelecting = ref(false)\n    function select (item: any) {\n      if (props.multiple) {\n        const index = selected.value.findIndex(selection => selection === item.value)\n\n        if (index === -1) {\n          model.value = [...model.value, item.value]\n        } else {\n          const value = [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        }\n      } else {\n        model.value = [item.value]\n\n        isSelecting.value = true\n\n        search.value = item.title\n        menu.value = false\n        isPristine.value = true\n\n        nextTick(() => (isSelecting.value = false))\n      }\n    }\n\n    watch(() => vTextFieldRef.value, val => {\n      activator.value = val.$el.querySelector('.v-input__control')\n    })\n\n    watch(isFocused, val => {\n      if (val) {\n        isSelecting.value = true\n        search.value = props.multiple ? '' : String(model.value ?? '')\n        isPristine.value = true\n\n        nextTick(() => isSelecting.value = false)\n      } else {\n        menu.value = false\n        search.value = ''\n      }\n    })\n\n    watch(search, val => {\n      if (!isFocused.value || isSelecting.value) return\n\n      if (val) menu.value = true\n\n      isPristine.value = !val\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          modelValue={ search.value }\n          onInput={ onInput }\n          class={[\n            'v-autocomplete',\n            {\n              'v-autocomplete--active-menu': menu.value,\n              'v-autocomplete--chips': !!props.chips,\n              [`v-autocomplete--${props.multiple ? 'multiple' : 'single'}`]: true,\n            },\n          ]}\n          appendInnerIcon={ props.menuIcon }\n          dirty={ selected.value.length > 0 }\n          onClick:clear={ onClear }\n          onClick:control={ onClickControl }\n          onClick:input={ onClickControl }\n          onFocus={ () => isFocused.value = true }\n          onBlur={ () => isFocused.value = false }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                { activator.value && (\n                  <VMenu\n                    v-model={ menu.value }\n                    activator={ activator.value }\n                    contentClass=\"v-autocomplete__content\"\n                    eager={ props.eager }\n                    openOnClick={ false }\n                    transition={ props.transition }\n                    onAfterLeave={ onAfterLeave }\n                  >\n                    <VList\n                      selected={ selected.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                    >\n                      { !filteredItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      )) }\n\n                      { filteredItems.value.map(({ item, matches }) => (\n                        <VListItem\n                          value={ item.value }\n                          onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                          onClick={ () => select(item) }\n                        >\n                          {{\n                            title: () => {\n                              return isPristine.value\n                                ? item.title\n                                : highlightResult(item.title, matches.title, search.value?.length ?? 0)\n                            },\n                          }}\n                        </VListItem>\n                      )) }\n                    </VList>\n                  </VMenu>\n                ) }\n                  { selections.value.map((selection, index) => {\n                    function onChipClose (e: Event) {\n                      e.stopPropagation()\n                      e.preventDefault()\n\n                      select(selection)\n                    }\n\n                    const slotProps = {\n                      'onClick:close': onChipClose,\n                      modelValue: true,\n                    }\n\n                    return (\n                      <div class=\"v-autocomplete__selection\">\n                        { hasChips && (\n                          <VDefaultsProvider\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: selection.title,\n                              },\n                            }}\n                          >\n                            { slots.chip\n                              ? slots.chip({ props: slotProps, selection })\n                              : (<VChip { ...slotProps } />)\n                            }\n                          </VDefaultsProvider>\n                        ) }\n\n                        { !hasChips && (\n                          slots.selection\n                            ? slots.selection({ selection })\n                            : (\n                              <span class=\"v-autocomplete__selection-text\">\n                                { selection.title }\n                                { props.multiple && (index < selections.value.length - 1) && (\n                                  <span class=\"v-autocomplete__selection-comma\">,</span>\n                                ) }\n                              </span>\n                            )\n                        ) }\n                      </div>\n                    )\n                  }) }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return useForwardRef({\n      filteredItems,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VAutocomplete = InstanceType<typeof VAutocomplete>\n","<template>\r\n  <v-autocomplete\r\n    v-model=\"model\"\r\n    :items=\"items\"\r\n    :loading=\"isLoading\"\r\n    v-model:search=\"inputChange\"\r\n    item-title=\"title\"\r\n    item-value=\"id\"\r\n    label=\"搜索电影...\"\r\n    no-data-text=\"没有找到相关电影\"\r\n  >\r\n  </v-autocomplete>\r\n</template>\r\n<script>\r\nimport Movie from \"@/api/movie.js\";\r\nexport default {\r\n  data: () => ({\r\n    isLoading: false,\r\n    items: [],\r\n    model: null,\r\n    inputChange: null,\r\n    search: null,\r\n    tab: null,\r\n    value: null,\r\n  }),\r\n  emits: [\"idSearched\"],\r\n  watch: {\r\n    model(val) {\r\n      this.$emit(\"idSearched\", val);\r\n    },\r\n\r\n    inputChange(val) {\r\n      if (this.timer) {\r\n        clearTimeout(this.timer);\r\n      }\r\n      if (val) {\r\n        this.timer = setTimeout(() => {\r\n          this.remoteSearch(val);\r\n        }, 300);\r\n      } else {\r\n        this.items = [];\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    remoteSearch(val) {\r\n      this.isLoading = true;\r\n      // Lazily load input items\r\n      Movie.search(val)\r\n        .then((res) => (this.items = res))\r\n        .finally(() => (this.isLoading = false));\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./SearchWidget.vue?vue&type=template&id=59484814\"\nimport script from \"./SearchWidget.vue?vue&type=script&lang=js\"\nexport * from \"./SearchWidget.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\文档\\\\Repository\\\\ongoing\\\\hublix\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./SearchPage.vue?vue&type=template&id=145a9219\"\nimport script from \"./SearchPage.vue?vue&type=script&lang=js\"\nexport * from \"./SearchPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\文档\\\\Repository\\\\ongoing\\\\hublix\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createBlock","_component_v_container","_createVNode","_component_SearchWidget","onIdSearched","$options","_component_v_card","class","flat","_component_v_row","_component_v_col","onClick","style","_createElementBlock","_Fragment","_renderList","$data","item","index","_component_v_chip","key","id","name","_component_MovieCard","defaultFilter","value","query","toString","toLocaleLowerCase","indexOf","makeFilterProps","propsFactory","customFilter","Function","customKeyFilter","Object","filterKeys","Array","String","filterMode","type","default","noFilter","Boolean","filterItems","items","options","array","filter","keys","wrapInArray","customFiltersLength","length","loop","customMatches","defaultMatches","match","getPropertyFromItem","keyFilter","_options$customKeyFil2","defaultMatchesLength","customMatchesLength","push","matches","useFilter","props","strQuery","computed","filteredItems","unref","highlightResult","text","isArray","Error","substr","VAutocomplete","genericComponent","search","makeSelectProps","makeTransitionProps","transition","emits","e","val","setup","slots","_ref","t","useLocale","vTextFieldRef","ref","activator","isFocused","isPristine","menu","useItems","useProxiedModel","model","v","multiple","undefined","selections","unwrapped","transformItem","found","find","selection","selected","map","onClear","openOnClear","onClickControl","hideNoData","onKeydown","includes","onInput","target","onAfterLeave","isSelecting","select","findIndex","splice","title","nextTick","watch","$el","querySelector","useRender","hasChips","chips","chip","menuIcon","$event","eager","_slots$noData2","noDataText","_ref2","preventDefault","_search$value","onChipClose","stopPropagation","slotProps","modelValue","VChip","closable","closableChips","size","useForwardRef","_component_v_autocomplete","_ctx","loading","label","data","isLoading","inputChange","tab","this","$emit","timer","clearTimeout","setTimeout","remoteSearch","methods","Movie","then","res","finally","__exports__","components","SearchWidget","MovieCard","created","fetchData","history","async","render"],"sourceRoot":""}